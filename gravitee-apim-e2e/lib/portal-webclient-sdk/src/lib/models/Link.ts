/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io Portal Rest API
 * API dedicated to the devportal part of Gravitee
 *
 * Contact: contact@graviteesource.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Link
 */
export interface Link {
    /**
     * Name of the link.
     * @type {string}
     * @memberof Link
     */
    name?: string;
    /**
     * target of the link. Can be either a URL id resourceType is 'external' or a UUID if resourceType is 'page' or 'category'.
     * @type {string}
     * @memberof Link
     */
    resourceRef?: string;
    /**
     * the type of the link.
     * @type {string}
     * @memberof Link
     */
    resourceType?: LinkResourceTypeEnum;
    /**
     * true if resourceType is 'page' and resourceRef is the id of a folder.
     * @type {boolean}
     * @memberof Link
     */
    folder?: boolean;
}

export function LinkFromJSON(json: any): Link {
    return LinkFromJSONTyped(json, false);
}

export function LinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): Link {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'resourceRef': !exists(json, 'resourceRef') ? undefined : json['resourceRef'],
        'resourceType': !exists(json, 'resourceType') ? undefined : json['resourceType'],
        'folder': !exists(json, 'folder') ? undefined : json['folder'],
    };
}

export function LinkToJSON(value?: Link | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'resourceRef': value.resourceRef,
        'resourceType': value.resourceType,
        'folder': value.folder,
    };
}

/**
* @export
* @enum {string}
*/
export enum LinkResourceTypeEnum {
    External = 'external',
    Page = 'page',
    Category = 'category'
}


