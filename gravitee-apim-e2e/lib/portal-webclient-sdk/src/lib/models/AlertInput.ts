/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io Portal Rest API
 * API dedicated to the devportal part of Gravitee
 *
 * Contact: contact@graviteesource.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AlertTimeUnit,
    AlertTimeUnitFromJSON,
    AlertTimeUnitFromJSONTyped,
    AlertTimeUnitToJSON,
    AlertType,
    AlertTypeFromJSON,
    AlertTypeFromJSONTyped,
    AlertTypeToJSON,
    AlertWebhook,
    AlertWebhookFromJSON,
    AlertWebhookFromJSONTyped,
    AlertWebhookToJSON,
} from './';

/**
 * 
 * @export
 * @interface AlertInput
 */
export interface AlertInput {
    /**
     * Concerned application ID
     * @type {string}
     * @memberof AlertInput
     */
    application?: string;
    /**
     * 
     * @type {AlertType}
     * @memberof AlertInput
     */
    type?: AlertType;
    /**
     * Filter on API id (empty for all apis)
     * @type {string}
     * @memberof AlertInput
     */
    api?: string;
    /**
     * Alert description
     * @type {string}
     * @memberof AlertInput
     */
    description?: string;
    /**
     * Http status code to trigger the alert
     * @type {string}
     * @memberof AlertInput
     */
    status_code?: string;
    /**
     * Percent to trigger the alert on status code
     * @type {number}
     * @memberof AlertInput
     */
    status_percent?: number;
    /**
     * true, if alert is enabled
     * @type {boolean}
     * @memberof AlertInput
     */
    enabled?: boolean;
    /**
     * Response time to trigger the alert
     * @type {number}
     * @memberof AlertInput
     */
    response_time?: number;
    /**
     * Compute alert on selected duration
     * @type {number}
     * @memberof AlertInput
     */
    duration?: number;
    /**
     * 
     * @type {AlertTimeUnit}
     * @memberof AlertInput
     */
    time_unit?: AlertTimeUnit;
    /**
     * 
     * @type {AlertWebhook}
     * @memberof AlertInput
     */
    webhook?: AlertWebhook;
}

export function AlertInputFromJSON(json: any): AlertInput {
    return AlertInputFromJSONTyped(json, false);
}

export function AlertInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'application': !exists(json, 'application') ? undefined : json['application'],
        'type': !exists(json, 'type') ? undefined : AlertTypeFromJSON(json['type']),
        'api': !exists(json, 'api') ? undefined : json['api'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'status_code': !exists(json, 'status_code') ? undefined : json['status_code'],
        'status_percent': !exists(json, 'status_percent') ? undefined : json['status_percent'],
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'response_time': !exists(json, 'response_time') ? undefined : json['response_time'],
        'duration': !exists(json, 'duration') ? undefined : json['duration'],
        'time_unit': !exists(json, 'time_unit') ? undefined : AlertTimeUnitFromJSON(json['time_unit']),
        'webhook': !exists(json, 'webhook') ? undefined : AlertWebhookFromJSON(json['webhook']),
    };
}

export function AlertInputToJSON(value?: AlertInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'application': value.application,
        'type': AlertTypeToJSON(value.type),
        'api': value.api,
        'description': value.description,
        'status_code': value.status_code,
        'status_percent': value.status_percent,
        'enabled': value.enabled,
        'response_time': value.response_time,
        'duration': value.duration,
        'time_unit': AlertTimeUnitToJSON(value.time_unit),
        'webhook': AlertWebhookToJSON(value.webhook),
    };
}


