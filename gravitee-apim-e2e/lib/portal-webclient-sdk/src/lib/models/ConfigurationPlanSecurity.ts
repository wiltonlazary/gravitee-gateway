/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io Portal Rest API
 * API dedicated to the devportal part of Gravitee
 *
 * Contact: contact@graviteesource.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Enabled,
    EnabledFromJSON,
    EnabledFromJSONTyped,
    EnabledToJSON,
} from './';

/**
 * 
 * @export
 * @interface ConfigurationPlanSecurity
 */
export interface ConfigurationPlanSecurity {
    /**
     * 
     * @type {Enabled}
     * @memberof ConfigurationPlanSecurity
     */
    apikey?: Enabled;
    /**
     * 
     * @type {Enabled}
     * @memberof ConfigurationPlanSecurity
     */
    sharedApiKey?: Enabled;
    /**
     * 
     * @type {Enabled}
     * @memberof ConfigurationPlanSecurity
     */
    oauth2?: Enabled;
    /**
     * 
     * @type {Enabled}
     * @memberof ConfigurationPlanSecurity
     */
    keyless?: Enabled;
    /**
     * 
     * @type {Enabled}
     * @memberof ConfigurationPlanSecurity
     */
    jwt?: Enabled;
}

export function ConfigurationPlanSecurityFromJSON(json: any): ConfigurationPlanSecurity {
    return ConfigurationPlanSecurityFromJSONTyped(json, false);
}

export function ConfigurationPlanSecurityFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigurationPlanSecurity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apikey': !exists(json, 'apikey') ? undefined : EnabledFromJSON(json['apikey']),
        'sharedApiKey': !exists(json, 'sharedApiKey') ? undefined : EnabledFromJSON(json['sharedApiKey']),
        'oauth2': !exists(json, 'oauth2') ? undefined : EnabledFromJSON(json['oauth2']),
        'keyless': !exists(json, 'keyless') ? undefined : EnabledFromJSON(json['keyless']),
        'jwt': !exists(json, 'jwt') ? undefined : EnabledFromJSON(json['jwt']),
    };
}

export function ConfigurationPlanSecurityToJSON(value?: ConfigurationPlanSecurity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apikey': EnabledToJSON(value.apikey),
        'sharedApiKey': EnabledToJSON(value.sharedApiKey),
        'oauth2': EnabledToJSON(value.oauth2),
        'keyless': EnabledToJSON(value.keyless),
        'jwt': EnabledToJSON(value.jwt),
    };
}


