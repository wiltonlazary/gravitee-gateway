/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io Portal Rest API
 * API dedicated to the devportal part of Gravitee
 *
 * Contact: contact@graviteesource.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Link,
    LinkFromJSON,
    LinkFromJSONTyped,
    LinkToJSON,
} from './';

/**
 * 
 * @export
 * @interface CategorizedLinks
 */
export interface CategorizedLinks {
    /**
     * true if the links of this category are in system folder and not in a subfolder.
     * @type {boolean}
     * @memberof CategorizedLinks
     */
    root?: boolean;
    /**
     * name of the group of links
     * @type {string}
     * @memberof CategorizedLinks
     */
    category?: string;
    /**
     * 
     * @type {Array<Link>}
     * @memberof CategorizedLinks
     */
    links?: Array<Link>;
}

export function CategorizedLinksFromJSON(json: any): CategorizedLinks {
    return CategorizedLinksFromJSONTyped(json, false);
}

export function CategorizedLinksFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategorizedLinks {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'root': !exists(json, 'root') ? undefined : json['root'],
        'category': !exists(json, 'category') ? undefined : json['category'],
        'links': !exists(json, 'links') ? undefined : ((json['links'] as Array<any>).map(LinkFromJSON)),
    };
}

export function CategorizedLinksToJSON(value?: CategorizedLinks | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'root': value.root,
        'category': value.category,
        'links': value.links === undefined ? undefined : ((value.links as Array<any>).map(LinkToJSON)),
    };
}


