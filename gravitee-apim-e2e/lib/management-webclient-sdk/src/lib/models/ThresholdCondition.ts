/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Condition,
    ConditionFromJSON,
    ConditionFromJSONTyped,
    ConditionToJSON,
    Projection,
    ProjectionFromJSON,
    ProjectionFromJSONTyped,
    ProjectionToJSON,
    ThresholdConditionAllOf,
    ThresholdConditionAllOfFromJSON,
    ThresholdConditionAllOfFromJSONTyped,
    ThresholdConditionAllOfToJSON,
} from './';

/**
 * 
 * @export
 * @interface ThresholdCondition
 */
export interface ThresholdCondition extends Condition {
    /**
     * 
     * @type {string}
     * @memberof ThresholdCondition
     */
    property: string;
    /**
     * 
     * @type {string}
     * @memberof ThresholdCondition
     */
    operator: ThresholdConditionOperatorEnum;
    /**
     * 
     * @type {number}
     * @memberof ThresholdCondition
     */
    threshold: number;
}

export function ThresholdConditionFromJSON(json: any): ThresholdCondition {
    return ThresholdConditionFromJSONTyped(json, false);
}

export function ThresholdConditionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThresholdCondition {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...ConditionFromJSONTyped(json, ignoreDiscriminator),
        'property': json['property'],
        'operator': json['operator'],
        'threshold': json['threshold'],
    };
}

export function ThresholdConditionToJSON(value?: ThresholdCondition | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...ConditionToJSON(value),
        'property': value.property,
        'operator': value.operator,
        'threshold': value.threshold,
    };
}

/**
* @export
* @enum {string}
*/
export enum ThresholdConditionOperatorEnum {
    LT = 'LT',
    LTE = 'LTE',
    GTE = 'GTE',
    GT = 'GT'
}


