/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ThemeCssType,
    ThemeCssTypeFromJSON,
    ThemeCssTypeFromJSONTyped,
    ThemeCssTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface ThemeCssDefinition
 */
export interface ThemeCssDefinition {
    /**
     * 
     * @type {string}
     * @memberof ThemeCssDefinition
     */
    _default?: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeCssDefinition
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeCssDefinition
     */
    name?: string;
    /**
     * 
     * @type {ThemeCssType}
     * @memberof ThemeCssDefinition
     */
    type?: ThemeCssType;
    /**
     * 
     * @type {string}
     * @memberof ThemeCssDefinition
     */
    value?: string;
}

export function ThemeCssDefinitionFromJSON(json: any): ThemeCssDefinition {
    return ThemeCssDefinitionFromJSONTyped(json, false);
}

export function ThemeCssDefinitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThemeCssDefinition {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '_default': !exists(json, 'default') ? undefined : json['default'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'type': !exists(json, 'type') ? undefined : ThemeCssTypeFromJSON(json['type']),
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function ThemeCssDefinitionToJSON(value?: ThemeCssDefinition | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'default': value._default,
        'description': value.description,
        'name': value.name,
        'type': ThemeCssTypeToJSON(value.type),
        'value': value.value,
    };
}


