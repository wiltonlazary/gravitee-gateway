/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Enabled,
    EnabledFromJSON,
    EnabledFromJSONTyped,
    EnabledToJSON,
    GithubAuthentication,
    GithubAuthenticationFromJSON,
    GithubAuthenticationFromJSONTyped,
    GithubAuthenticationToJSON,
    GoogleAuthentication,
    GoogleAuthenticationFromJSON,
    GoogleAuthenticationFromJSONTyped,
    GoogleAuthenticationToJSON,
    OAuth2Authentication,
    OAuth2AuthenticationFromJSON,
    OAuth2AuthenticationFromJSONTyped,
    OAuth2AuthenticationToJSON,
} from './';

/**
 * 
 * @export
 * @interface ConsoleAuthentication
 */
export interface ConsoleAuthentication {
    /**
     * 
     * @type {GithubAuthentication}
     * @memberof ConsoleAuthentication
     */
    github?: GithubAuthentication;
    /**
     * 
     * @type {GoogleAuthentication}
     * @memberof ConsoleAuthentication
     */
    google?: GoogleAuthentication;
    /**
     * 
     * @type {Enabled}
     * @memberof ConsoleAuthentication
     */
    localLogin?: Enabled;
    /**
     * 
     * @type {OAuth2Authentication}
     * @memberof ConsoleAuthentication
     */
    oauth2?: OAuth2Authentication;
}

export function ConsoleAuthenticationFromJSON(json: any): ConsoleAuthentication {
    return ConsoleAuthenticationFromJSONTyped(json, false);
}

export function ConsoleAuthenticationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConsoleAuthentication {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'github': !exists(json, 'github') ? undefined : GithubAuthenticationFromJSON(json['github']),
        'google': !exists(json, 'google') ? undefined : GoogleAuthenticationFromJSON(json['google']),
        'localLogin': !exists(json, 'localLogin') ? undefined : EnabledFromJSON(json['localLogin']),
        'oauth2': !exists(json, 'oauth2') ? undefined : OAuth2AuthenticationFromJSON(json['oauth2']),
    };
}

export function ConsoleAuthenticationToJSON(value?: ConsoleAuthentication | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'github': GithubAuthenticationToJSON(value.github),
        'google': GoogleAuthenticationToJSON(value.google),
        'localLogin': EnabledToJSON(value.localLogin),
        'oauth2': OAuth2AuthenticationToJSON(value.oauth2),
    };
}


