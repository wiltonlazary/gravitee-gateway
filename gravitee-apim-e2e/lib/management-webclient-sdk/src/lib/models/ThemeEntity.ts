/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ThemeDefinition,
    ThemeDefinitionFromJSON,
    ThemeDefinitionFromJSONTyped,
    ThemeDefinitionToJSON,
} from './';

/**
 * 
 * @export
 * @interface ThemeEntity
 */
export interface ThemeEntity {
    /**
     * 
     * @type {string}
     * @memberof ThemeEntity
     */
    backgroundImage?: string;
    /**
     * 
     * @type {Date}
     * @memberof ThemeEntity
     */
    created_at?: Date;
    /**
     * 
     * @type {ThemeDefinition}
     * @memberof ThemeEntity
     */
    definition?: ThemeDefinition;
    /**
     * 
     * @type {boolean}
     * @memberof ThemeEntity
     */
    enabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ThemeEntity
     */
    favicon?: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeEntity
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeEntity
     */
    logo?: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeEntity
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeEntity
     */
    optionalLogo?: string;
    /**
     * 
     * @type {Date}
     * @memberof ThemeEntity
     */
    updated_at?: Date;
}

export function ThemeEntityFromJSON(json: any): ThemeEntity {
    return ThemeEntityFromJSONTyped(json, false);
}

export function ThemeEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThemeEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'backgroundImage': !exists(json, 'backgroundImage') ? undefined : json['backgroundImage'],
        'created_at': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'definition': !exists(json, 'definition') ? undefined : ThemeDefinitionFromJSON(json['definition']),
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'favicon': !exists(json, 'favicon') ? undefined : json['favicon'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'logo': !exists(json, 'logo') ? undefined : json['logo'],
        'name': json['name'],
        'optionalLogo': !exists(json, 'optionalLogo') ? undefined : json['optionalLogo'],
        'updated_at': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
    };
}

export function ThemeEntityToJSON(value?: ThemeEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'backgroundImage': value.backgroundImage,
        'created_at': value.created_at === undefined ? undefined : (value.created_at.toISOString()),
        'definition': ThemeDefinitionToJSON(value.definition),
        'enabled': value.enabled,
        'favicon': value.favicon,
        'id': value.id,
        'logo': value.logo,
        'name': value.name,
        'optionalLogo': value.optionalLogo,
        'updated_at': value.updated_at === undefined ? undefined : (value.updated_at.toISOString()),
    };
}


