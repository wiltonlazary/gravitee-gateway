/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Endpoint,
    EndpointFromJSON,
    EndpointFromJSONTyped,
    EndpointToJSON,
    HttpClientOptions,
    HttpClientOptionsFromJSON,
    HttpClientOptionsFromJSONTyped,
    HttpClientOptionsToJSON,
    HttpClientSslOptions,
    HttpClientSslOptionsFromJSON,
    HttpClientSslOptionsFromJSONTyped,
    HttpClientSslOptionsToJSON,
    HttpHeader,
    HttpHeaderFromJSON,
    HttpHeaderFromJSONTyped,
    HttpHeaderToJSON,
    HttpProxy,
    HttpProxyFromJSON,
    HttpProxyFromJSONTyped,
    HttpProxyToJSON,
    LoadBalancer,
    LoadBalancerFromJSON,
    LoadBalancerFromJSONTyped,
    LoadBalancerToJSON,
    Services,
    ServicesFromJSON,
    ServicesFromJSONTyped,
    ServicesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EndpointGroup
 */
export interface EndpointGroup {
    /**
     * 
     * @type {Array<Endpoint>}
     * @memberof EndpointGroup
     */
    endpoints?: Array<Endpoint>;
    /**
     * 
     * @type {Array<HttpHeader>}
     * @memberof EndpointGroup
     */
    headers?: Array<HttpHeader>;
    /**
     * 
     * @type {HttpClientOptions}
     * @memberof EndpointGroup
     */
    http?: HttpClientOptions;
    /**
     * 
     * @type {LoadBalancer}
     * @memberof EndpointGroup
     */
    load_balancing?: LoadBalancer;
    /**
     * 
     * @type {string}
     * @memberof EndpointGroup
     */
    name?: string;
    /**
     * 
     * @type {HttpProxy}
     * @memberof EndpointGroup
     */
    proxy?: HttpProxy;
    /**
     * 
     * @type {Services}
     * @memberof EndpointGroup
     */
    services?: Services;
    /**
     * 
     * @type {HttpClientSslOptions}
     * @memberof EndpointGroup
     */
    ssl?: HttpClientSslOptions;
}

export function EndpointGroupFromJSON(json: any): EndpointGroup {
    return EndpointGroupFromJSONTyped(json, false);
}

export function EndpointGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): EndpointGroup {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'endpoints': !exists(json, 'endpoints') ? undefined : ((json['endpoints'] as Array<any>).map(EndpointFromJSON)),
        'headers': !exists(json, 'headers') ? undefined : ((json['headers'] as Array<any>).map(HttpHeaderFromJSON)),
        'http': !exists(json, 'http') ? undefined : HttpClientOptionsFromJSON(json['http']),
        'load_balancing': !exists(json, 'load_balancing') ? undefined : LoadBalancerFromJSON(json['load_balancing']),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'proxy': !exists(json, 'proxy') ? undefined : HttpProxyFromJSON(json['proxy']),
        'services': !exists(json, 'services') ? undefined : ServicesFromJSON(json['services']),
        'ssl': !exists(json, 'ssl') ? undefined : HttpClientSslOptionsFromJSON(json['ssl']),
    };
}

export function EndpointGroupToJSON(value?: EndpointGroup | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'endpoints': value.endpoints === undefined ? undefined : ((value.endpoints as Array<any>).map(EndpointToJSON)),
        'headers': value.headers === undefined ? undefined : ((value.headers as Array<any>).map(HttpHeaderToJSON)),
        'http': HttpClientOptionsToJSON(value.http),
        'load_balancing': LoadBalancerToJSON(value.load_balancing),
        'name': value.name,
        'proxy': HttpProxyToJSON(value.proxy),
        'services': ServicesToJSON(value.services),
        'ssl': HttpClientSslOptionsToJSON(value.ssl),
    };
}


