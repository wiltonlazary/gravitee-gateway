/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    IdentityProviderType,
    IdentityProviderTypeFromJSON,
    IdentityProviderTypeFromJSONTyped,
    IdentityProviderTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface NewIdentityProviderEntity
 */
export interface NewIdentityProviderEntity {
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof NewIdentityProviderEntity
     */
    configuration: { [key: string]: any; };
    /**
     * 
     * @type {string}
     * @memberof NewIdentityProviderEntity
     */
    description?: string;
    /**
     * 
     * @type {boolean}
     * @memberof NewIdentityProviderEntity
     */
    emailRequired?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NewIdentityProviderEntity
     */
    enabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof NewIdentityProviderEntity
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof NewIdentityProviderEntity
     */
    syncMappings?: boolean;
    /**
     * 
     * @type {IdentityProviderType}
     * @memberof NewIdentityProviderEntity
     */
    type: IdentityProviderType;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof NewIdentityProviderEntity
     */
    userProfileMapping?: { [key: string]: string; };
}

export function NewIdentityProviderEntityFromJSON(json: any): NewIdentityProviderEntity {
    return NewIdentityProviderEntityFromJSONTyped(json, false);
}

export function NewIdentityProviderEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewIdentityProviderEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'configuration': json['configuration'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'emailRequired': !exists(json, 'emailRequired') ? undefined : json['emailRequired'],
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'name': json['name'],
        'syncMappings': !exists(json, 'syncMappings') ? undefined : json['syncMappings'],
        'type': IdentityProviderTypeFromJSON(json['type']),
        'userProfileMapping': !exists(json, 'userProfileMapping') ? undefined : json['userProfileMapping'],
    };
}

export function NewIdentityProviderEntityToJSON(value?: NewIdentityProviderEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'configuration': value.configuration,
        'description': value.description,
        'emailRequired': value.emailRequired,
        'enabled': value.enabled,
        'name': value.name,
        'syncMappings': value.syncMappings,
        'type': IdentityProviderTypeToJSON(value.type),
        'userProfileMapping': value.userProfileMapping,
    };
}


