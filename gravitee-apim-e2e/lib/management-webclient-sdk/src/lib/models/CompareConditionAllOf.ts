/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CompareConditionAllOf
 */
export interface CompareConditionAllOf {
    /**
     * 
     * @type {string}
     * @memberof CompareConditionAllOf
     */
    property?: string;
    /**
     * 
     * @type {string}
     * @memberof CompareConditionAllOf
     */
    operator?: CompareConditionAllOfOperatorEnum;
    /**
     * 
     * @type {number}
     * @memberof CompareConditionAllOf
     */
    multiplier?: number;
    /**
     * 
     * @type {string}
     * @memberof CompareConditionAllOf
     */
    property2?: string;
}

export function CompareConditionAllOfFromJSON(json: any): CompareConditionAllOf {
    return CompareConditionAllOfFromJSONTyped(json, false);
}

export function CompareConditionAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompareConditionAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'property': !exists(json, 'property') ? undefined : json['property'],
        'operator': !exists(json, 'operator') ? undefined : json['operator'],
        'multiplier': !exists(json, 'multiplier') ? undefined : json['multiplier'],
        'property2': !exists(json, 'property2') ? undefined : json['property2'],
    };
}

export function CompareConditionAllOfToJSON(value?: CompareConditionAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'property': value.property,
        'operator': value.operator,
        'multiplier': value.multiplier,
        'property2': value.property2,
    };
}

/**
* @export
* @enum {string}
*/
export enum CompareConditionAllOfOperatorEnum {
    LT = 'LT',
    LTE = 'LTE',
    GTE = 'GTE',
    GT = 'GT'
}


