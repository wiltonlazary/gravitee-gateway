/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MembershipMemberType,
    MembershipMemberTypeFromJSON,
    MembershipMemberTypeFromJSONTyped,
    MembershipMemberTypeToJSON,
    MembershipReferenceType,
    MembershipReferenceTypeFromJSON,
    MembershipReferenceTypeFromJSONTyped,
    MembershipReferenceTypeToJSON,
    RoleEntity,
    RoleEntityFromJSON,
    RoleEntityFromJSONTyped,
    RoleEntityToJSON,
} from './';

/**
 * 
 * @export
 * @interface MemberEntity
 */
export interface MemberEntity {
    /**
     * 
     * @type {Date}
     * @memberof MemberEntity
     */
    created_at?: Date;
    /**
     * 
     * @type {string}
     * @memberof MemberEntity
     */
    displayName?: string;
    /**
     * 
     * @type {string}
     * @memberof MemberEntity
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof MemberEntity
     */
    id?: string;
    /**
     * 
     * @type {{ [key: string]: Array<string>; }}
     * @memberof MemberEntity
     */
    permissions?: { [key: string]: Array<string>; };
    /**
     * 
     * @type {string}
     * @memberof MemberEntity
     */
    referenceId?: string;
    /**
     * 
     * @type {MembershipReferenceType}
     * @memberof MemberEntity
     */
    referenceType?: MembershipReferenceType;
    /**
     * 
     * @type {Array<RoleEntity>}
     * @memberof MemberEntity
     */
    roles?: Array<RoleEntity>;
    /**
     * 
     * @type {MembershipMemberType}
     * @memberof MemberEntity
     */
    type?: MembershipMemberType;
    /**
     * 
     * @type {Date}
     * @memberof MemberEntity
     */
    updated_at?: Date;
}

export function MemberEntityFromJSON(json: any): MemberEntity {
    return MemberEntityFromJSONTyped(json, false);
}

export function MemberEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'created_at': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'permissions': !exists(json, 'permissions') ? undefined : json['permissions'],
        'referenceId': !exists(json, 'referenceId') ? undefined : json['referenceId'],
        'referenceType': !exists(json, 'referenceType') ? undefined : MembershipReferenceTypeFromJSON(json['referenceType']),
        'roles': !exists(json, 'roles') ? undefined : ((json['roles'] as Array<any>).map(RoleEntityFromJSON)),
        'type': !exists(json, 'type') ? undefined : MembershipMemberTypeFromJSON(json['type']),
        'updated_at': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
    };
}

export function MemberEntityToJSON(value?: MemberEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created_at': value.created_at === undefined ? undefined : (value.created_at.toISOString()),
        'displayName': value.displayName,
        'email': value.email,
        'id': value.id,
        'permissions': value.permissions,
        'referenceId': value.referenceId,
        'referenceType': MembershipReferenceTypeToJSON(value.referenceType),
        'roles': value.roles === undefined ? undefined : ((value.roles as Array<any>).map(RoleEntityToJSON)),
        'type': MembershipMemberTypeToJSON(value.type),
        'updated_at': value.updated_at === undefined ? undefined : (value.updated_at.toISOString()),
    };
}


