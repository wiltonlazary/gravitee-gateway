/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AccessControlEntity,
    AccessControlEntityFromJSON,
    AccessControlEntityFromJSONTyped,
    AccessControlEntityToJSON,
    PageMediaEntity,
    PageMediaEntityFromJSON,
    PageMediaEntityFromJSONTyped,
    PageMediaEntityToJSON,
    PageSourceEntity,
    PageSourceEntityFromJSON,
    PageSourceEntityFromJSONTyped,
    PageSourceEntityToJSON,
    Visibility,
    VisibilityFromJSON,
    VisibilityFromJSONTyped,
    VisibilityToJSON,
} from './';

/**
 * 
 * @export
 * @interface UpdatePageEntity
 */
export interface UpdatePageEntity {
    /**
     * 
     * @type {Array<AccessControlEntity>}
     * @memberof UpdatePageEntity
     */
    accessControls?: Array<AccessControlEntity>;
    /**
     * 
     * @type {Array<PageMediaEntity>}
     * @memberof UpdatePageEntity
     */
    attached_media?: Array<PageMediaEntity>;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof UpdatePageEntity
     */
    configuration?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof UpdatePageEntity
     */
    content?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdatePageEntity
     */
    crossId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UpdatePageEntity
     */
    excludedAccessControls?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof UpdatePageEntity
     */
    excluded_groups?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof UpdatePageEntity
     */
    homepage?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UpdatePageEntity
     */
    lastContributor?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof UpdatePageEntity
     */
    metadata?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof UpdatePageEntity
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof UpdatePageEntity
     */
    order?: number;
    /**
     * 
     * @type {string}
     * @memberof UpdatePageEntity
     */
    parentId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UpdatePageEntity
     */
    published?: boolean;
    /**
     * 
     * @type {PageSourceEntity}
     * @memberof UpdatePageEntity
     */
    source?: PageSourceEntity;
    /**
     * 
     * @type {boolean}
     * @memberof UpdatePageEntity
     */
    useAutoFetch?: boolean;
    /**
     * 
     * @type {Visibility}
     * @memberof UpdatePageEntity
     */
    visibility?: Visibility;
}

export function UpdatePageEntityFromJSON(json: any): UpdatePageEntity {
    return UpdatePageEntityFromJSONTyped(json, false);
}

export function UpdatePageEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatePageEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accessControls': !exists(json, 'accessControls') ? undefined : ((json['accessControls'] as Array<any>).map(AccessControlEntityFromJSON)),
        'attached_media': !exists(json, 'attached_media') ? undefined : ((json['attached_media'] as Array<any>).map(PageMediaEntityFromJSON)),
        'configuration': !exists(json, 'configuration') ? undefined : json['configuration'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'crossId': !exists(json, 'crossId') ? undefined : json['crossId'],
        'excludedAccessControls': !exists(json, 'excludedAccessControls') ? undefined : json['excludedAccessControls'],
        'excluded_groups': !exists(json, 'excluded_groups') ? undefined : json['excluded_groups'],
        'homepage': !exists(json, 'homepage') ? undefined : json['homepage'],
        'lastContributor': !exists(json, 'lastContributor') ? undefined : json['lastContributor'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'parentId': !exists(json, 'parentId') ? undefined : json['parentId'],
        'published': !exists(json, 'published') ? undefined : json['published'],
        'source': !exists(json, 'source') ? undefined : PageSourceEntityFromJSON(json['source']),
        'useAutoFetch': !exists(json, 'useAutoFetch') ? undefined : json['useAutoFetch'],
        'visibility': !exists(json, 'visibility') ? undefined : VisibilityFromJSON(json['visibility']),
    };
}

export function UpdatePageEntityToJSON(value?: UpdatePageEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accessControls': value.accessControls === undefined ? undefined : ((value.accessControls as Array<any>).map(AccessControlEntityToJSON)),
        'attached_media': value.attached_media === undefined ? undefined : ((value.attached_media as Array<any>).map(PageMediaEntityToJSON)),
        'configuration': value.configuration,
        'content': value.content,
        'crossId': value.crossId,
        'excludedAccessControls': value.excludedAccessControls,
        'excluded_groups': value.excluded_groups,
        'homepage': value.homepage,
        'lastContributor': value.lastContributor,
        'metadata': value.metadata,
        'name': value.name,
        'order': value.order,
        'parentId': value.parentId,
        'published': value.published,
        'source': PageSourceEntityToJSON(value.source),
        'useAutoFetch': value.useAutoFetch,
        'visibility': VisibilityToJSON(value.visibility),
    };
}


