/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AlertEventRuleEntity,
    AlertEventRuleEntityFromJSON,
    AlertEventRuleEntityFromJSONTyped,
    AlertEventRuleEntityToJSON,
    AlertReferenceType,
    AlertReferenceTypeFromJSON,
    AlertReferenceTypeFromJSONTyped,
    AlertReferenceTypeToJSON,
    Condition,
    ConditionFromJSON,
    ConditionFromJSONTyped,
    ConditionToJSON,
    Dampening,
    DampeningFromJSON,
    DampeningFromJSONTyped,
    DampeningToJSON,
    Filter,
    FilterFromJSON,
    FilterFromJSONTyped,
    FilterToJSON,
    Notification,
    NotificationFromJSON,
    NotificationFromJSONTyped,
    NotificationToJSON,
    Period,
    PeriodFromJSON,
    PeriodFromJSONTyped,
    PeriodToJSON,
} from './';

/**
 * 
 * @export
 * @interface NewAlertTriggerEntity
 */
export interface NewAlertTriggerEntity {
    /**
     * 
     * @type {Array<Condition>}
     * @memberof NewAlertTriggerEntity
     */
    conditions?: Array<Condition>;
    /**
     * 
     * @type {Dampening}
     * @memberof NewAlertTriggerEntity
     */
    dampening?: Dampening;
    /**
     * 
     * @type {string}
     * @memberof NewAlertTriggerEntity
     */
    description?: string;
    /**
     * 
     * @type {boolean}
     * @memberof NewAlertTriggerEntity
     */
    enabled?: boolean;
    /**
     * 
     * @type {Array<AlertEventRuleEntity>}
     * @memberof NewAlertTriggerEntity
     */
    event_rules?: Array<AlertEventRuleEntity>;
    /**
     * 
     * @type {Array<Filter>}
     * @memberof NewAlertTriggerEntity
     */
    filters?: Array<Filter>;
    /**
     * 
     * @type {string}
     * @memberof NewAlertTriggerEntity
     */
    id?: string;
    /**
     * 
     * @type {{ [key: string]: { [key: string]: string; }; }}
     * @memberof NewAlertTriggerEntity
     */
    metadata?: { [key: string]: { [key: string]: string; }; };
    /**
     * 
     * @type {string}
     * @memberof NewAlertTriggerEntity
     */
    name: string;
    /**
     * 
     * @type {Array<Period>}
     * @memberof NewAlertTriggerEntity
     */
    notificationPeriods?: Array<Period>;
    /**
     * 
     * @type {Array<Notification>}
     * @memberof NewAlertTriggerEntity
     */
    notifications?: Array<Notification>;
    /**
     * 
     * @type {string}
     * @memberof NewAlertTriggerEntity
     */
    reference_id?: string;
    /**
     * 
     * @type {AlertReferenceType}
     * @memberof NewAlertTriggerEntity
     */
    reference_type?: AlertReferenceType;
    /**
     * 
     * @type {string}
     * @memberof NewAlertTriggerEntity
     */
    severity?: NewAlertTriggerEntitySeverityEnum;
    /**
     * 
     * @type {string}
     * @memberof NewAlertTriggerEntity
     */
    source?: string;
    /**
     * 
     * @type {boolean}
     * @memberof NewAlertTriggerEntity
     */
    template?: boolean;
    /**
     * 
     * @type {string}
     * @memberof NewAlertTriggerEntity
     */
    type: string;
}

export function NewAlertTriggerEntityFromJSON(json: any): NewAlertTriggerEntity {
    return NewAlertTriggerEntityFromJSONTyped(json, false);
}

export function NewAlertTriggerEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewAlertTriggerEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'conditions': !exists(json, 'conditions') ? undefined : ((json['conditions'] as Array<any>).map(ConditionFromJSON)),
        'dampening': !exists(json, 'dampening') ? undefined : DampeningFromJSON(json['dampening']),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'event_rules': !exists(json, 'event_rules') ? undefined : ((json['event_rules'] as Array<any>).map(AlertEventRuleEntityFromJSON)),
        'filters': !exists(json, 'filters') ? undefined : ((json['filters'] as Array<any>).map(FilterFromJSON)),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'name': json['name'],
        'notificationPeriods': !exists(json, 'notificationPeriods') ? undefined : ((json['notificationPeriods'] as Array<any>).map(PeriodFromJSON)),
        'notifications': !exists(json, 'notifications') ? undefined : ((json['notifications'] as Array<any>).map(NotificationFromJSON)),
        'reference_id': !exists(json, 'reference_id') ? undefined : json['reference_id'],
        'reference_type': !exists(json, 'reference_type') ? undefined : AlertReferenceTypeFromJSON(json['reference_type']),
        'severity': !exists(json, 'severity') ? undefined : json['severity'],
        'source': !exists(json, 'source') ? undefined : json['source'],
        'template': !exists(json, 'template') ? undefined : json['template'],
        'type': json['type'],
    };
}

export function NewAlertTriggerEntityToJSON(value?: NewAlertTriggerEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'conditions': value.conditions === undefined ? undefined : ((value.conditions as Array<any>).map(ConditionToJSON)),
        'dampening': DampeningToJSON(value.dampening),
        'description': value.description,
        'enabled': value.enabled,
        'event_rules': value.event_rules === undefined ? undefined : ((value.event_rules as Array<any>).map(AlertEventRuleEntityToJSON)),
        'filters': value.filters === undefined ? undefined : ((value.filters as Array<any>).map(FilterToJSON)),
        'id': value.id,
        'metadata': value.metadata,
        'name': value.name,
        'notificationPeriods': value.notificationPeriods === undefined ? undefined : ((value.notificationPeriods as Array<any>).map(PeriodToJSON)),
        'notifications': value.notifications === undefined ? undefined : ((value.notifications as Array<any>).map(NotificationToJSON)),
        'reference_id': value.reference_id,
        'reference_type': AlertReferenceTypeToJSON(value.reference_type),
        'severity': value.severity,
        'source': value.source,
        'template': value.template,
        'type': value.type,
    };
}

/**
* @export
* @enum {string}
*/
export enum NewAlertTriggerEntitySeverityEnum {
    INFO = 'INFO',
    WARNING = 'WARNING',
    CRITICAL = 'CRITICAL'
}


