/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BodyPartMediaType,
    BodyPartMediaTypeFromJSON,
    BodyPartMediaTypeFromJSONTyped,
    BodyPartMediaTypeToJSON,
    ContentDisposition,
    ContentDispositionFromJSON,
    ContentDispositionFromJSONTyped,
    ContentDispositionToJSON,
    FormDataContentDisposition,
    FormDataContentDispositionFromJSON,
    FormDataContentDispositionFromJSONTyped,
    FormDataContentDispositionToJSON,
    MultiPart,
    MultiPartFromJSON,
    MultiPartFromJSONTyped,
    MultiPartToJSON,
    ParameterizedHeader,
    ParameterizedHeaderFromJSON,
    ParameterizedHeaderFromJSONTyped,
    ParameterizedHeaderToJSON,
} from './';

/**
 * 
 * @export
 * @interface FormDataBodyPart
 */
export interface FormDataBodyPart {
    /**
     * 
     * @type {ContentDisposition}
     * @memberof FormDataBodyPart
     */
    contentDisposition?: ContentDisposition;
    /**
     * 
     * @type {any}
     * @memberof FormDataBodyPart
     */
    entity?: any;
    /**
     * 
     * @type {FormDataContentDisposition}
     * @memberof FormDataBodyPart
     */
    formDataContentDisposition?: FormDataContentDisposition;
    /**
     * 
     * @type {{ [key: string]: Array<string>; }}
     * @memberof FormDataBodyPart
     */
    headers?: { [key: string]: Array<string>; };
    /**
     * 
     * @type {BodyPartMediaType}
     * @memberof FormDataBodyPart
     */
    mediaType?: BodyPartMediaType;
    /**
     * 
     * @type {any}
     * @memberof FormDataBodyPart
     */
    messageBodyWorkers?: any;
    /**
     * 
     * @type {string}
     * @memberof FormDataBodyPart
     */
    name?: string;
    /**
     * 
     * @type {{ [key: string]: Array<ParameterizedHeader>; }}
     * @memberof FormDataBodyPart
     */
    parameterizedHeaders?: { [key: string]: Array<ParameterizedHeader>; };
    /**
     * 
     * @type {MultiPart}
     * @memberof FormDataBodyPart
     */
    parent?: MultiPart;
    /**
     * 
     * @type {any}
     * @memberof FormDataBodyPart
     */
    providers?: any;
    /**
     * 
     * @type {boolean}
     * @memberof FormDataBodyPart
     */
    simple?: boolean;
    /**
     * 
     * @type {string}
     * @memberof FormDataBodyPart
     */
    value?: string;
}

export function FormDataBodyPartFromJSON(json: any): FormDataBodyPart {
    return FormDataBodyPartFromJSONTyped(json, false);
}

export function FormDataBodyPartFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormDataBodyPart {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'contentDisposition': !exists(json, 'contentDisposition') ? undefined : ContentDispositionFromJSON(json['contentDisposition']),
        'entity': !exists(json, 'entity') ? undefined : json['entity'],
        'formDataContentDisposition': !exists(json, 'formDataContentDisposition') ? undefined : FormDataContentDispositionFromJSON(json['formDataContentDisposition']),
        'headers': !exists(json, 'headers') ? undefined : json['headers'],
        'mediaType': !exists(json, 'mediaType') ? undefined : BodyPartMediaTypeFromJSON(json['mediaType']),
        'messageBodyWorkers': !exists(json, 'messageBodyWorkers') ? undefined : json['messageBodyWorkers'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'parameterizedHeaders': !exists(json, 'parameterizedHeaders') ? undefined : json['parameterizedHeaders'],
        'parent': !exists(json, 'parent') ? undefined : MultiPartFromJSON(json['parent']),
        'providers': !exists(json, 'providers') ? undefined : json['providers'],
        'simple': !exists(json, 'simple') ? undefined : json['simple'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function FormDataBodyPartToJSON(value?: FormDataBodyPart | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'contentDisposition': ContentDispositionToJSON(value.contentDisposition),
        'entity': value.entity,
        'formDataContentDisposition': FormDataContentDispositionToJSON(value.formDataContentDisposition),
        'headers': value.headers,
        'mediaType': BodyPartMediaTypeToJSON(value.mediaType),
        'messageBodyWorkers': value.messageBodyWorkers,
        'name': value.name,
        'parameterizedHeaders': value.parameterizedHeaders,
        'parent': MultiPartToJSON(value.parent),
        'providers': value.providers,
        'simple': value.simple,
        'value': value.value,
    };
}


